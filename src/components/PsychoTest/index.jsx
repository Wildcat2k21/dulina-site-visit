import './index.css';
import { useRef, useState } from 'react';
import NoticeBlock from './NoticeBlock.jsx';
import ResultsList from './ResultsList.jsx';
import { runAllModels } from '@utils/models.js';
import { openModal } from '@store/modalSlice';
import { useDispatch } from 'react-redux';

// -----------------------------------------------------
// –†–µ–∞–∫—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (UI)
// -----------------------------------------------------
export default function PsychoTest() {
  const uploadFileRef = useRef(null);
  const [uploadedImgURL, setupLoadedImgURL] = useState('');
  const [results, setResults] = useState([]);

  const onButtonClick = () => uploadFileRef.current.click();
  const dispatch = useDispatch();

  const uploadHandler = async (e) => {
    if (results.length) {
      setResults([]);
    }

    const file = e.target.files?.[0];
    if (!file) return;
    setupLoadedImgURL(URL.createObjectURL(file));

    const reader = new FileReader();
    reader.onload = async () => {
      const imageUrl = reader.result;
      const res = await runAllModels(imageUrl, false); // <-- –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –≤—ã–Ω–µ—Å–µ–Ω–∞ –Ω–∏–∂–µ

      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
      const clsOut = res[0].data;
      const fixClsOut = clsOut.map((val) => Math.round(val));

      const [
        correct,
        shortText,
        badZoom,
        badOrient,
        badAngle,
        forceBlur,
        glimmer,
      ] = fixClsOut;

      let message = '';
      if (shortText === 1) {
        message = 'üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –æ–±—ä–µ–º —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞';
      } else if (badZoom === 1) {
        message = 'üö´ –ú–∞—à—Ç–∞–± —Å–Ω–∏–º–∫–∞ —Å–ª–∏—à–∫–æ–º –±–ª–∏–∑–∫–∏–π –∏–ª–∏ –¥–∞–ª–µ–∫–∏–π';
      } else if (badOrient === 1) {
        message = 'üö´ –°–Ω–∏–º–æ–∫ –ø–æ–≤–µ—Ä–Ω—É—Ç –Ω–∞ 90 –≥—Ä–∞–¥—É—Å–æ–≤';
      } else if (badAngle === 1) {
        message = 'üö´ –£–≥–æ–ª —Å–Ω–∏–º–∫–∞ —Å–ª–∏—à–∫–æ–º –∫—Ä—É—Ç–æ–π';
      } else if (forceBlur === 1) {
        message = 'üö´ –°–Ω–∏–º–æ–∫ —Å–ª–∏—à–∫–æ–º —Ä–∞–∑–º—ã—Ç—ã–π';
      } else if (glimmer === 1) {
        message = 'üö´ –°–Ω–∏–º–æ–∫ —Å–ª–∏—à–∫–æ–º —Ç—É—Å–∫–ª—ã–π';
      } else if (correct === 1) {
        message = '‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞';
      } else {
        message = '‚ùì –ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞';
      }

      dispatch(openModal(message));
      if (correct === 0) return;

      setResults(res);
    };
    reader.readAsDataURL(file);
  };

  const btnClass =
    'psycho-test__decorated-btn' +
    (uploadedImgURL ? ' psycho-test__decorated-btn--selected' : '');

  return (
    <div className="psycho-test">
      <NoticeBlock /> {/* UI-–±–ª–æ–∫ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∫ —Ñ–æ—Ç–æ */}
      {uploadedImgURL && (
        <img
          className="psycho-test__uploaded-img"
          src={uploadedImgURL}
          alt="uploaded-img"
        />
      )}
      <button className={btnClass} onClick={onButtonClick}>
        {uploadedImgURL ? '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é üîÅ' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É'}
        <input
          type="file"
          accept="image/*"
          ref={uploadFileRef}
          onChange={uploadHandler}
          style={{ display: 'none' }}
        />
      </button>
      {results.length > 0 && <ResultsList results={results} />}
    </div>
  );
}
